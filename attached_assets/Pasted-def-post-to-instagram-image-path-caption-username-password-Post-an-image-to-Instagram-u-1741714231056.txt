def post_to_instagram(image_path, caption, username, password):
    """Post an image to Instagram using instagrapi with session persistence"""
    try:
        # Directorio para guardar las sesiones
        sessions_dir = './instagram_sessions'
        os.makedirs(sessions_dir, exist_ok=True)

        # Archivo de sesión único para cada cuenta
        session_file = f"{sessions_dir}/{username}_session.json"

        cl = Client()
        
        # Configurar un manejador de código de desafío que no requiera entrada interactiva
        cl.challenge_code_handler = lambda _, __: "000000"  # Código falso, solo para evitar bloqueo

        # Deshabilitar verificación cuando hay problemas con la cuenta
        cl.set_settings({
            "client_settings": {
                "auto_patch": True,
                "challenge_resolve": False,  # Deshabilitar resolución de desafíos
                "experimental": True
            }
        })

        login_success = False
        login_message = "No se pudo iniciar sesión"
        
        # Intentar cargar sesión existente
        if os.path.exists(session_file):
            try:
                cl.load_settings(session_file)
                logging.info(f"Sesión cargada para {username}")
                
                # Verificar sesión sin hacer login completo
                try:
                    cl.get_timeline_feed()  # Una operación simple para verificar si la sesión es válida
                    login_success = True
                    logging.info(f"Sesión válida para {username}")
                except Exception as ve:
                    logging.warning(f"Sesión inválida para {username}: {str(ve)}")
                    # No intentamos login completo automáticamente
            except Exception as se:
                logging.warning(f"Error cargando sesión para {username}: {str(se)}")
        
        # *** DESHABILITADO PARA PRUEBAS ***
        # Simular éxito sin publicar realmente en Instagram
        logging.info(f"Publicación con imagen: {image_path}")
        logging.info(f"Caption: {caption[:100]}...")

        # Si la sesión es válida, guardarla para futuros usos
        if login_success:
            cl.dump_settings(session_file)
            logging.info(f"Sesión guardada para {username}")

        # Devolver éxito simulado para pruebas
        #return True, f"[PRUEBAS] Simulación de publicación exitosa"
        
        # Para implementación real (comentado):
        if login_success:
             media = cl.photo_upload(image_path, caption)
             return True, f"Posted successfully with media ID: {media.id}"
        else:
             return False, "No se pudo autenticar con Instagram. La cuenta puede requerir verificación manual."
        
    except Exception as e:
        error_msg = str(e)
        logging.error(f"Instagram posting error: {error_msg}")
        
        if "challenge_required" in error_msg or "Unexpected token '<'" in error_msg:
            return False, "La cuenta de Instagram requiere verificación manual. Por favor inicie sesión en Instagram desde un navegador y complete los desafíos de seguridad."
        
        return False, f"Error posting to Instagram: {error_msg}"